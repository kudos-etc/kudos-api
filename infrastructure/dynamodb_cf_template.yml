AWSTemplateFormatVersion: "2010-09-09"

Resources:
  kudos:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      GlobalSecondaryIndexes: []
      BillingMode: PROVISIONED
      TableName: kudos
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  TablekudosReadCapacityScalableTarget:
    Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
    DependsOn: kudos
    Properties:
      ServiceNamespace: dynamodb
      ResourceId: table/kudos
      ScalableDimension: 'dynamodb:table:ReadCapacityUnits'
      MinCapacity: 1
      MaxCapacity: 10
      RoleARN: !Sub >-
        arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable
  TablekudosReadCapacityScalingPolicy:
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    DependsOn: TablekudosReadCapacityScalableTarget
    Properties:
      ServiceNamespace: dynamodb
      ResourceId: table/kudos
      ScalableDimension: 'dynamodb:table:ReadCapacityUnits'
      PolicyName: kudos-read-capacity-scaling-policy
      PolicyType: TargetTrackingScaling
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
        ScaleOutCooldown: 60
        ScaleInCooldown: 60
        TargetValue: 70
  TablekudosWriteCapacityScalableTarget:
    Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
    DependsOn: kudos
    Properties:
      ServiceNamespace: dynamodb
      ResourceId: table/kudos
      ScalableDimension: 'dynamodb:table:WriteCapacityUnits'
      MinCapacity: 1
      MaxCapacity: 10
      RoleARN: !Sub >-
        arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable
  TablekudosWriteCapacityScalingPolicy:
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    DependsOn: TablekudosWriteCapacityScalableTarget
    Properties:
      ServiceNamespace: dynamodb
      ResourceId: table/kudos
      ScalableDimension: 'dynamodb:table:WriteCapacityUnits'
      PolicyName: kudos-write-capacity-scaling-policy
      PolicyType: TargetTrackingScaling
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
        ScaleOutCooldown: 60
        ScaleInCooldown: 60
        TargetValue: 70
